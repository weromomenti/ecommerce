name: Build and Deploy InventoryService to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths:
      - 'InventoryService/**'
  workflow_dispatch:

env:
  REGISTRY: ecommercecontainerregiry.azurecr.io
  RESOURCE_GROUP: Learning
  CONTAINER_APP_ENV: az204-demo-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push InventoryService API image
      run: |
        docker build -f ./InventoryService/InventoryService.Api/Dockerfile -t $REGISTRY/inventoryservice-api:${{ github.sha }} ./InventoryService
        docker push $REGISTRY/inventoryservice-api:${{ github.sha }}
        docker tag $REGISTRY/inventoryservice-api:${{ github.sha }} $REGISTRY/inventoryservice-api:latest
        docker push $REGISTRY/inventoryservice-api:latest

    - name: Build and push InventoryService Worker image
      run: |
        docker build -f ./InventoryService/InventoryService.Hosting/Dockerfile -t $REGISTRY/inventoryservice-worker:${{ github.sha }} ./InventoryService
        docker push $REGISTRY/inventoryservice-worker:${{ github.sha }}
        docker tag $REGISTRY/inventoryservice-worker:${{ github.sha }} $REGISTRY/inventoryservice-worker:latest
        docker push $REGISTRY/inventoryservice-worker:latest

    - name: Deploy InventoryService API to Azure Container App
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # Check if container app exists, create if not
          if ! az containerapp show --name inventoryservice-api --resource-group $RESOURCE_GROUP &> /dev/null; then
            echo "Creating InventoryService API Container App..."
            az containerapp create \
              --name inventoryservice-api \
              --resource-group $RESOURCE_GROUP \
              --environment $CONTAINER_APP_ENV \
              --image $REGISTRY/inventoryservice-api:${{ github.sha }} \
              --target-port 8080 \
              --ingress external \
              --min-replicas 1 \
              --max-replicas 3 \
              --cpu 0.5 \
              --memory 1Gi \
              --env-vars \
                ASPNETCORE_ENVIRONMENT=Release \
                DOTNET_ENVIRONMENT=Release
          else
            echo "Updating InventoryService API Container App..."
            az containerapp update \
              --name inventoryservice-api \
              --resource-group $RESOURCE_GROUP \
              --image $REGISTRY/inventoryservice-api:${{ github.sha }}
          fi

    - name: Deploy InventoryService Worker to Azure Container App
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # Check if container app exists, create if not
          if ! az containerapp show --name inventoryservice-worker --resource-group $RESOURCE_GROUP &> /dev/null; then
            echo "Creating InventoryService Worker Container App..."
            az containerapp create \
              --name inventoryservice-worker \
              --resource-group $RESOURCE_GROUP \
              --environment $CONTAINER_APP_ENV \
              --image $REGISTRY/inventoryservice-worker:${{ github.sha }} \
              --ingress internal \
              --min-replicas 1 \
              --max-replicas 2 \
              --cpu 0.25 \
              --memory 0.5Gi \
              --env-vars \
                DOTNET_ENVIRONMENT=Release
          else
            echo "Updating InventoryService Worker Container App..."
            az containerapp update \
              --name inventoryservice-worker \
              --resource-group $RESOURCE_GROUP \
              --image $REGISTRY/inventoryservice-worker:${{ github.sha }}
          fi

    - name: Configure InventoryService API Environment Variables
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az containerapp update \
            --name inventoryservice-api \
            --resource-group $RESOURCE_GROUP \
            --replace-env-vars \
              ASPNETCORE_ENVIRONMENT=Release \
              DOTNET_ENVIRONMENT=Release \
              ConnectionStrings__DefaultConnection="${{ secrets.INVENTORY_SQL_CONNECTION_STRING }}" \
              ConnectionStrings__MongoDb="${{ secrets.INVENTORY_MONGODB_CONNECTION_STRING }}" \
              ConnectionStrings__Redis="${{ secrets.INVENTORY_REDIS_CONNECTION_STRING }}" \
              MongoDb__DatabaseName=InventoryDb

    - name: Configure InventoryService Worker Environment Variables
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az containerapp update \
            --name inventoryservice-worker \
            --resource-group $RESOURCE_GROUP \
            --replace-env-vars \
              DOTNET_ENVIRONMENT=Release \
              ConnectionStrings__DefaultConnection="${{ secrets.INVENTORY_SQL_CONNECTION_STRING }}" \
              ConnectionStrings__MongoDb="${{ secrets.INVENTORY_MONGODB_CONNECTION_STRING }}" \
              ConnectionStrings__Redis="${{ secrets.INVENTORY_REDIS_CONNECTION_STRING }}" \
              RabbitMQ__Host="${{ secrets.RABBITMQ_HOST }}" \
              RabbitMQ__Port=5672 \
              MongoDb__DatabaseName=InventoryDb

    - name: Verify Deployment
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "=== InventoryService API Status ==="
          az containerapp show --name inventoryservice-api --resource-group $RESOURCE_GROUP --query "properties.configuration.ingress.fqdn" -o tsv
          
          echo "=== InventoryService Worker Status ==="
          az containerapp show --name inventoryservice-worker --resource-group $RESOURCE_GROUP --query "properties.provisioningState" -o tsv
          
          echo "=== Deployment completed successfully ==="